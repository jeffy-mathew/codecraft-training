// Code generated by MockGen. DO NOT EDIT.
// Source: rank.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRank is a mock of Rank interface.
type MockRank struct {
	ctrl     *gomock.Controller
	recorder *MockRankMockRecorder
}

// MockRankMockRecorder is the mock recorder for MockRank.
type MockRankMockRecorder struct {
	mock *MockRank
}

// NewMockRank creates a new mock instance.
func NewMockRank(ctrl *gomock.Controller) *MockRank {
	mock := &MockRank{ctrl: ctrl}
	mock.recorder = &MockRankMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRank) EXPECT() *MockRankMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRank) Get(title string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", title)
	ret0, _ := ret[0].(int)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockRankMockRecorder) Get(title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRank)(nil).Get), title)
}
